---
import TimelineBlock from "./TimelineBlock.astro";
import TimelineOffset from "./TimelineOffset.astro";
import TimelineFadeSpacer from "./TimelineFadeSpacer.astro";
import type {RawTimelineObjectImport, TimelineObject, TimelineFrontmatter} from "./TimelineUtil";

const matches = import.meta.glob(`../content/**/*.mdx`, { eager: true });
const m = Object.values(matches);

let objects = m
    .map((v: any) => v as RawTimelineObjectImport)
    .filter(v => v.frontmatter['tl-title'] !== undefined)
    .sort((a, b) => a.frontmatter["tl-pos"] - b.frontmatter["tl-pos"])
    .map((v, i) => ({
        ...(v.frontmatter as TimelineFrontmatter),
        pos: ((i - 1) % 2 == 1) ? "left" : "right",
        url: v.url
    } as TimelineObject));

// First object has to be picked out, from then on i % 2 == 1 means its on the left.
const first = objects.shift();

---

<!-- CSS grid is so powerful if you can bully it into working -->
<div class="grid grid-cols-timeline h-fit gap-4" style="grid-template-rows: repeat(18, minmax(0, 1fr));">
    <TimelineFadeSpacer />
    <TimelineFadeSpacer />
    <div class="w-2 flex flex-col gap-0 row-span-full h-full" style={{ gridColumn: 2 }}>
        <!-- fade in -->
        <div class="bg-gradient-to-b from-transparent to-black rounded-t-full w-2 h-16"/>
        <div class="bg-black w-2 grow min-h-2"/>
        <!-- fade out -->
        <div class="bg-gradient-to-b from-black to-transparent rounded-b-full w-2 h-16"/>
    </div>
    <TimelineBlock object={{...first, pos: "left"}} />
    <TimelineOffset />
    {objects.map(o => (
            <TimelineBlock object={o} />
    ))}
    <!--<TimelineBlock position="right" />-->
    <!--<TimelineBlock />-->
</div>